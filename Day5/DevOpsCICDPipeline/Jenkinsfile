#!/usr/bin/env groovy

pipeline {
    agent {
        label 'built-in'
    }
    stages {
        stage('Build Custom Docker Image') {
            steps {
                script {
		    dir("Day5/DevOpsCICDPipeline/CustomDockerAnsibleNodeImages/ubuntu-ansible") {
		         sh "cp ~/.ssh/id_ed25519.pub authorized_keys"
		         sh "docker build -t tektutor/ubuntu-ansible:1.0 ."
			 sh "rm authorized_keys"
			 sh "docker images | grep ubuntu-ansible"
		    }
                }
            }
        }
//	stage("Manual approval") {
//		steps {
//			timeout( time: 1, unit: "DAYS") {
//			   input message: 'Are we good to perform infrastructure automation ?', ok: 'Yes'
//			}
//			echo "About to invoke Terraform ..."
//		}
//	}
	stage("Build Custom Terraform File Provider and Install it") {
	    steps {
                script {
		  dir("Day4/custom-terraform-provider/file") {
		     sh "go build"
		     sh "go install"
	  	  }
		}
	    }
	}
	stage("Build Custom Terraform Docker Provider and Install it") {
	    steps {
                script {
		  dir("Day5/DevOpsCICDPipeline/custom-terraform-provider/docker") {
		     sh "go build"
		     sh "go install"
	  	  }
		}
	    }
	}
        stage("Invoke Terraform Automation Script") {
            steps {
                script {
		  dir("Day5/DevOpsCICDPipeline/invoking-ansible-playbook-from-terraform") {
		    sh "terraform destroy --auto-approve"
                    sh "terraform plan"
		    sh "terraform apply --auto-approve"
		    sh "terraform show"
		    sh "docker ps"
		  }
                }
            }
        }
        stage('Invoke Ansible Playbook') {
            steps {
                script {
		  dir("Day5/DevOpsCICDPipeline/invoking-ansible-playbook-from-terraform") {
                    sh "ansible-playbook -i hosts install-nginx-playbook.yml"
		  }
                }
            }
        }
        stage('Test if we are able to access web page from provisioned container') {
            steps {
                script {
                    sh "curl http://172.17.0.2:80"
                }
            }
        }
        stage('Dispose the resource created by Terraform') {
            steps {
                script {
		  dir("Day5/DevOpsCICDPipeline/invoking-ansible-playbook-from-terraform") {
                    sh "terraform destroy --auto-approve"
		    sh "docker ps"
		  }
                }
            }
        }
   }
}
